#!/bin/bash
set -e

BUILD_DIR=$1
export PERL5LIB=
PATH="$(dirname $(which $($MODERN_PERL -e'print $^X'))):$PATH"
eval "$($HELPER_ROOT/local-lib)"

if [ -e 'dist.ini' ]; then
  echo "Building with Dist::Zilla"
  set -x
  $HELPER_ROOT/cpan-install Dist::Zilla
  AUTHOR_DEPS="$(dzil authordeps --missing | grep -v '^inc::')"
  $HELPER_ROOT/cpan-install $AUTHOR_DEPS
  dzil build --in="$BUILD_DIR"
elif [ -e 'Makefile.PL' ]; then
  if grep -q 'Module::Install' 'Makefile.PL'; then
    echo "Building with Makefile.PL (Module::Install)"
    AUTHOR_DEPS='Module::Install'
    while read command module; do
      grep -q -E "$command" 'Makefile.PL' && AUTHOR_DEPS="$AUTHOR_DEPS $module"
    done < $HELPER_ROOT/module-install-commands.txt
    $HELPER_ROOT/cpan-install $AUTHOR_DEPS
  else
    echo "Building with Makefile.PL (ExtUtils::MakeMaker)"
  fi
  $MODERN_PERL Makefile.PL DISTVNAME=$BUILD_DIR
  make manifest
  make distdir
elif [ -e 'Build.PL' ]; then
  echo "Building with Build.PL (Module::Build)"
  set -x
  $HELPER_ROOT/cpan-install Module::Build
  $MODERN_PERL Build.PL
  ./Build distdir
  DIST_DIR=$(perl -e'my $d = (do "_build/build_params")->[2]; print "$d->{dist_name}-$d->{dist_version}\n"')
  mv "$DIST_DIR" "$BUILD_DIR"
else
  echo "Don't know how to build this dist!" >&2
  exit 1
fi
