HELPER_ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
export MODERN_PERL="$(perlbrew exec --with=5.18 perl -e'print STDERR "$^X"' 2>&1 >/dev/null)"

function build-dist {
  BUILD_DIR=build_dir
  $HELPER_ROOT/build-dist $BUILD_DIR
}

function build-perl {
  local BREWVER=${TRAVIS_PERL_VERSION/_*/}
  local BREWOPTS=
  [[ "${TRAVIS_PERL_VERSION}_" =~ '_thr_' ]] && BREWOPTS="$BREWOPTS -Duseithreads"
  [[ "$(sed -n -E -e's/^5\.([0-9]+).*/\1/p' <<< $TRAVIS_PERL_VERSION)" -ge 14 ]] && BREWOPTS="$BREWOPTS -j 2"

  if ! perlbrew use | grep -q "Currently using $TRAVIS_PERL_VERSION"; then
    echo "Building perl $TRAVIS_PERL_VERSION..."
    local PERLBUILD=$(perlbrew install --as $TRAVIS_PERL_VERSION --notest --noman --verbose $BREWOPTS $BREWVER 2>&1)
    perlbrew use $TRAVIS_PERL_VERSION
    if ! perlbrew use | grep -q "Currently using $TRAVIS_PERL_VERSION"; then
      echo "Unable to switch to $TRAVIS_PERL_VERSION - compilation failed...?" 1>&2
      echo "$PERLBUILD" 1>&2
      return 1
    fi
  fi
  perlbrew install-cpanm -f
}

function cpan-install {
  $HELPER_ROOT/cpan-install "$@"
}

function coverage-setup {
  [ -z "$COVERAGE" ] && return
  cover -delete -silent
  export HARNESS_PERL_SWITCHES='-MDevel::Cover=-ignore,^x?t/,-blib,0'
}

function coverage-report {
  [ -z "$COVERAGE" ] && return
  local cover_opts
  if perl -mDevel::Cover::Report::Coveralls -e1 2>/dev/null; then
    cover_opts="$cover_opts -report coveralls"
  fi
  cover $cover_opts
}

function test-dirs {
  local TEST_DIRS='t xt'
  if [ -n "$AUTHOR_TESTING" ] && [ "$AUTHOR_TESTING" -eq 0 ]; then
    TEST_DIRS='t'
  fi
  echo "$TEST_DIRS"
}

# vim: ft=sh
