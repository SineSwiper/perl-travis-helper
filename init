export HELPER_ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
export SYSTEM_CORES=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || sysctl -n hw.ncpu || echo 1)
MODERN_PERL="$(
  perlbrew exec perl -MConfig -e'
    print STDERR ($]*1000000)." ".($^X=~m{/}?$^X:$Config{perlpath})."\n";
  ' 2>&1 >/dev/null |
  sort -n |
  tail -1 |
  cut -c9-
)"
[ -z "$MODERN_PERL" ] && MODERN_PERL="$(which perl)"
export MODERN_PERL="env PERL5LIB= $MODERN_PERL"

[ -z "$AUTHOR_TESTING"  ] && export AUTHOR_TESTING=1
[ -z "$CPAN_MIRROR"     ] && export CPAN_MIRROR='http://www.cpan.org/'
[ -z "$SPLIT_BUILD"     ] && export SPLIT_BUILD=1
[ -z "$COVERAGE"        ] && export COVERAGE=0

function build-dist {
  export BUILD_DIR="$(pwd)/build_dir"
  $HELPER_ROOT/build-dist build_dir
}

function local-lib {
  eval "$($HELPER_ROOT/local-lib "$@")"
}

function build-perl {
  $HELPER_ROOT/build-perl "$TRAVIS_PERL_VERSION" || return 1
  perlbrew use "$TRAVIS_PERL_VERSION" || return 1
  if [ "$SPLIT_BUILD" == "0" ]; then
    MODERN_PERL="env PERL5LIB= $(which perl)"
  fi
}

function cpan-install {
  $HELPER_ROOT/cpan-install "$@"
}

function coverage-setup {
  [ -z "$COVERAGE" ] && return
  cover -delete -silent
  export HARNESS_PERL_SWITCHES='-MDevel::Cover=-ignore,^x?t/,-blib,0'
}

function coverage-report {
  [ -z "$COVERAGE" ] && return
  local cover_opts
  if perl -mDevel::Cover::Report::Coveralls -e1 2>/dev/null; then
    cover_opts="$cover_opts -report coveralls"
  fi
  cover $cover_opts
}

function test-dirs {
  local TEST_DIRS='t'
  if [ "$AUTHOR_TESTING" -ne 0 ] && [ -d xt ]; then
    TEST_DIRS="$TEST_DIRS xt"
  fi
  echo "$TEST_DIRS"
}

function test-files {
  local TEST_FILES="$(find $(test-dirs) -name '*.t')"
  echo $TEST_FILES
}

# vim: ft=sh
